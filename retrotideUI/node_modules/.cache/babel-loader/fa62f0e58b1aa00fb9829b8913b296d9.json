{"ast":null,"code":"var _classCallCheck = require(\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n//@ts-check\n\n/** \r\n * A class representing an edge. \r\n * \r\n * @property {Number} id The id of this edge.\r\n * @property {Number} sourceId The id of the source vertex.\r\n * @property {Number} targetId The id of the target vertex.\r\n * @property {Number} weight The weight of this edge. That is, the degree of the bond (single bond = 1, double bond = 2, etc).\r\n * @property {String} [bondType='-'] The bond type of this edge.\r\n * @property {Boolean} [isPartOfAromaticRing=false] Whether or not this edge is part of an aromatic ring.\r\n * @property {Boolean} [center=false] Wheter or not the bond is centered. For example, this affects straight double bonds.\r\n * @property {String} [wedge=''] Wedge direction. Either '', 'up' or 'down'\r\n */\nvar Edge = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\r\n   * The constructor for the class Edge.\r\n   *\r\n   * @param {Number} sourceId A vertex id.\r\n   * @param {Number} targetId A vertex id.\r\n   * @param {Number} [weight=1] The weight of the edge.\r\n   */\n  function Edge(sourceId, targetId) {\n    var weight = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n    _classCallCheck(this, Edge);\n\n    this.id = null;\n    this.sourceId = sourceId;\n    this.targetId = targetId;\n    this.weight = weight;\n    this.bondType = '-';\n    this.isPartOfAromaticRing = false;\n    this.center = false;\n    this.wedge = '';\n  }\n  /**\r\n   * Set the bond type of this edge. This also sets the edge weight.\r\n   * @param {String} bondType \r\n   */\n\n\n  _createClass(Edge, [{\n    key: \"setBondType\",\n    value: function setBondType(bondType) {\n      this.bondType = bondType;\n      this.weight = Edge.bonds[bondType];\n    }\n    /**\r\n     * An object mapping the bond type to the number of bonds.\r\n     *\r\n     * @returns {Object} The object containing the map.\r\n     */\n\n  }], [{\n    key: \"bonds\",\n    get: function get() {\n      return {\n        '-': 1,\n        '/': 1,\n        '\\\\': 1,\n        '=': 2,\n        '#': 3,\n        '$': 4\n      };\n    }\n  }]);\n\n  return Edge;\n}();\n\nmodule.exports = Edge;","map":{"version":3,"sources":["/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/smiles-drawer/src/Edge.js"],"names":["Edge","sourceId","targetId","weight","id","bondType","isPartOfAromaticRing","center","wedge","bonds","module","exports"],"mappings":";;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACMA,I;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,gBAAYC,QAAZ,EAAsBC,QAAtB,EAA4C;AAAA,QAAZC,MAAY,uEAAH,CAAG;;AAAA;;AACxC,SAAKC,EAAL,GAAU,IAAV;AACA,SAAKH,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKE,QAAL,GAAgB,GAAhB;AACA,SAAKC,oBAAL,GAA4B,KAA5B;AACA,SAAKC,MAAL,GAAc,KAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACH;AAED;AACJ;AACA;AACA;;;;;WACI,qBAAYH,QAAZ,EAAsB;AACpB,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKF,MAAL,GAAcH,IAAI,CAACS,KAAL,CAAWJ,QAAX,CAAd;AACD;AAED;AACJ;AACA;AACA;AACA;;;;SACI,eAAmB;AACf,aAAO;AACH,aAAK,CADF;AAEH,aAAK,CAFF;AAGH,cAAM,CAHH;AAIH,aAAK,CAJF;AAKH,aAAK,CALF;AAMH,aAAK;AANF,OAAP;AAQH;;;;;;AAGLK,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["//@ts-check\r\n\r\n/** \r\n * A class representing an edge. \r\n * \r\n * @property {Number} id The id of this edge.\r\n * @property {Number} sourceId The id of the source vertex.\r\n * @property {Number} targetId The id of the target vertex.\r\n * @property {Number} weight The weight of this edge. That is, the degree of the bond (single bond = 1, double bond = 2, etc).\r\n * @property {String} [bondType='-'] The bond type of this edge.\r\n * @property {Boolean} [isPartOfAromaticRing=false] Whether or not this edge is part of an aromatic ring.\r\n * @property {Boolean} [center=false] Wheter or not the bond is centered. For example, this affects straight double bonds.\r\n * @property {String} [wedge=''] Wedge direction. Either '', 'up' or 'down'\r\n */\r\nclass Edge {\r\n    /**\r\n     * The constructor for the class Edge.\r\n     *\r\n     * @param {Number} sourceId A vertex id.\r\n     * @param {Number} targetId A vertex id.\r\n     * @param {Number} [weight=1] The weight of the edge.\r\n     */\r\n    constructor(sourceId, targetId, weight = 1) {\r\n        this.id = null;\r\n        this.sourceId = sourceId;\r\n        this.targetId = targetId;\r\n        this.weight = weight;\r\n        this.bondType = '-';\r\n        this.isPartOfAromaticRing = false;\r\n        this.center = false;\r\n        this.wedge = '';\r\n    }\r\n\r\n    /**\r\n     * Set the bond type of this edge. This also sets the edge weight.\r\n     * @param {String} bondType \r\n     */\r\n    setBondType(bondType) {\r\n      this.bondType = bondType;\r\n      this.weight = Edge.bonds[bondType];\r\n    }\r\n\r\n    /**\r\n     * An object mapping the bond type to the number of bonds.\r\n     *\r\n     * @returns {Object} The object containing the map.\r\n     */\r\n    static get bonds() {\r\n        return {\r\n            '-': 1,\r\n            '/': 1,\r\n            '\\\\': 1,\r\n            '=': 2,\r\n            '#': 3,\r\n            '$': 4\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Edge"]},"metadata":{},"sourceType":"script"}