{"ast":null,"code":"// async actions and calls to the client / backend go here\n// we need access to the client if any\n// redux-thunk is imported toplevel so we should be able to access it and dispatch from here but we'll see\nconst clusterCADSeqSearch = (molecule, token) => {\n  console.log('hit api seqsearch with ' + molecule); // return async function beginMoleculeSearch(dispatch, getState) {\n  //   const requestObject = { // object structure needed for clusterCAD request, probably shouldn't be here\n  //     csrfmiddlewaretoken: \"\",\n  //     sdf: molecule,\n  //     draw: 1,\n  //     cutoff: 0.0,\n  //     maxCompounds: 10,\n  //   };\n  //   const response = await clusterCAD.post('https://clustercad.jbei.org/structureSearch/', {request}); // callback\n  //   dispatch({ type: 'jobAdded', payload: response.job });\n  // }\n}; // export function synchWrapper (someInput) {\n//   return async function beginMoleculeSearch(dispatch, getState) {\n//     // example\n//     const response = await client.post('/fakeApi/todos', { todo: initialTodo });\n//     dispatch({ type: 'todos/todoAdded', payload: response.todo });\n//   }\n// }\n\n\nexport { clusterCADSeqSearch }; // then import this function in the component, which has no idea it's async\n// remember to update reducers if dispatching an action","map":{"version":3,"sources":["/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/src/redux/middleware/api.js"],"names":["clusterCADSeqSearch","molecule","token","console","log"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,mBAAmB,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BH,QAAxC,EAD+C,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAbD,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASD,mBAAT,G,CACA;AACA","sourcesContent":["// async actions and calls to the client / backend go here\n// we need access to the client if any\n// redux-thunk is imported toplevel so we should be able to access it and dispatch from here but we'll see\n\nconst clusterCADSeqSearch = (molecule, token) => {\n  console.log('hit api seqsearch with ' + molecule);\n  // return async function beginMoleculeSearch(dispatch, getState) {\n  //   const requestObject = { // object structure needed for clusterCAD request, probably shouldn't be here\n  //     csrfmiddlewaretoken: \"\",\n  //     sdf: molecule,\n  //     draw: 1,\n  //     cutoff: 0.0,\n  //     maxCompounds: 10,\n  //   };\n  //   const response = await clusterCAD.post('https://clustercad.jbei.org/structureSearch/', {request}); // callback\n  //   dispatch({ type: 'jobAdded', payload: response.job });\n  // }\n}\n\n// export function synchWrapper (someInput) {\n//   return async function beginMoleculeSearch(dispatch, getState) {\n//     // example\n//     const response = await client.post('/fakeApi/todos', { todo: initialTodo });\n//     dispatch({ type: 'todos/todoAdded', payload: response.todo });\n//   }\n// }\n\nexport { clusterCADSeqSearch };\n// then import this function in the component, which has no idea it's async\n// remember to update reducers if dispatching an action"]},"metadata":{},"sourceType":"module"}