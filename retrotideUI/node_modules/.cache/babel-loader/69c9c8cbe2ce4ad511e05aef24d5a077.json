{"ast":null,"code":"var _jsxFileName = \"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/src/components/ChemDoodleWrapper.js\";\nimport React from 'react';\nimport { clusterCADSeqSearch } from '../redux/middleware/api';\nconst canvasDimensions = {\n  HEIGHT: 500,\n  WIDTH: 800\n};\n\nclass ChemDoodleWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      chemDoodleCanvas: {},\n      // JS object corresponding to sketcher\n      molecule: \"\"\n    };\n  }\n\n  componentDidMount() {\n    let newCanvas = new window.ChemDoodle.SketcherCanvas('chemDoodleCanvas', canvasDimensions.WIDTH, canvasDimensions.HEIGHT, {\n      useServices: false,\n      oneMolecule: true\n    }); // we need to use a callback to get the result of setState as it's asynchronous\n\n    this.setState({\n      chemDoodleCanvas: newCanvas\n    }, () => {\n      console.log(this.state.chemDoodleCanvas);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chemDoodleWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"chemDoodleCanvas\",\n      width: canvasDimensions.WIDTH + \"px\",\n      height: canvasDimensions.HEIGHT + \"px\",\n      style: {\n        border: '1px solid black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"This is a message that shows if the browser doesn't support HTML5 canvas, which all modern browsers should support now.\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        let mol = this.state.chemDoodleCanvas.getMolecule();\n        let formattedMol = window.ChemDoodle.writeMOL(mol);\n        this.setState({\n          molecule: formattedMol\n        }, () => {\n          clusterCADSeqSearch(this.state.molecule, \"\");\n        }); // is it necessary to put molecule in state?\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"TEST\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 12\n      }\n    }, \"Molecule sketcher is used courtesy of \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://web.ChemDoodle.com\",\n      rel: \"noopener noreferrer\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"ChemDoodle\"), \" under version 3 of the GNU GPL license.\")));\n  }\n\n}\n\nexport default ChemDoodleWrapper;","map":{"version":3,"sources":["/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/src/components/ChemDoodleWrapper.js"],"names":["React","clusterCADSeqSearch","canvasDimensions","HEIGHT","WIDTH","ChemDoodleWrapper","Component","constructor","props","state","errorMessage","chemDoodleCanvas","molecule","componentDidMount","newCanvas","window","ChemDoodle","SketcherCanvas","useServices","oneMolecule","setState","console","log","render","border","mol","getMolecule","formattedMol","writeMOL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,yBAAlC;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,MAAM,EAAE,GADe;AAEvBC,EAAAA,KAAK,EAAE;AAFgB,CAAzB;;AAKA,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,gBAAgB,EAAE,EAFP;AAEW;AACtBC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,SAAS,GAAG,IAAIC,MAAM,CAACC,UAAP,CAAkBC,cAAtB,CACd,kBADc,EAEdf,gBAAgB,CAACE,KAFH,EAGdF,gBAAgB,CAACC,MAHH,EAId;AACEe,MAAAA,WAAW,EAAC,KADd;AAEEC,MAAAA,WAAW,EAAC;AAFd,KAJc,CAAhB,CADkB,CAUlB;;AACA,SAAKC,QAAL,CAAc;AAACT,MAAAA,gBAAgB,EAAEG;AAAnB,KAAd,EAA6C,MAAM;AAACO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,gBAAvB;AAAyC,KAA7F;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,EAAE,EAAC,kBAAX;AAA8B,MAAA,KAAK,EAAErB,gBAAgB,CAACE,KAAjB,GAAyB,IAA9D;AAAoE,MAAA,MAAM,EAAEF,gBAAgB,CAACC,MAAjB,GAA0B,IAAtG;AAA4G,MAAA,KAAK,EAAE;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iIADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,YAAIC,GAAG,GAAG,KAAKhB,KAAL,CAAWE,gBAAX,CAA4Be,WAA5B,EAAV;AACA,YAAIC,YAAY,GAAGZ,MAAM,CAACC,UAAP,CAAkBY,QAAlB,CAA2BH,GAA3B,CAAnB;AACA,aAAKL,QAAL,CAAc;AACVR,UAAAA,QAAQ,EAAEe;AADA,SAAd,EAEK,MAAM;AAAC1B,UAAAA,mBAAmB,CAAC,KAAKQ,KAAL,CAAWG,QAAZ,EAAsB,EAAtB,CAAnB;AAA6C,SAFzD,EAHqB,CAKuC;AAC3D,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,wCADA,eAED;AAAG,MAAA,IAAI,EAAC,2BAAR;AAAoC,MAAA,GAAG,EAAC,qBAAxC;AAA8D,MAAA,MAAM,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFC,EAGA,0CAHA,CAAH,CAXF,CADF;AAmBD;;AA7C6C;;AAgDhD,eAAeP,iBAAf","sourcesContent":["import React from 'react';\nimport {clusterCADSeqSearch} from '../redux/middleware/api';\n\nconst canvasDimensions = {\n  HEIGHT: 500,\n  WIDTH: 800,\n}\n\nclass ChemDoodleWrapper extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      chemDoodleCanvas: {}, // JS object corresponding to sketcher\n      molecule: \"\",\n    }\n  }\n\n  componentDidMount() {\n    let newCanvas = new window.ChemDoodle.SketcherCanvas(\n      'chemDoodleCanvas',\n      canvasDimensions.WIDTH,\n      canvasDimensions.HEIGHT,\n      {\n        useServices:false,\n        oneMolecule:true\n      }\n    );\n    // we need to use a callback to get the result of setState as it's asynchronous\n    this.setState({chemDoodleCanvas: newCanvas}, () => {console.log(this.state.chemDoodleCanvas)});\n  }\n\n  render() {\n    return ( \n      <div id=\"chemDoodleWrapper\">\n        <canvas id=\"chemDoodleCanvas\" width={canvasDimensions.WIDTH + \"px\"} height={canvasDimensions.HEIGHT + \"px\"} style={{ border: '1px solid black' }}>\n          This is a message that shows if the browser doesn't support HTML5 canvas, which all modern browsers should support now.\n        </canvas>\n        <button onClick={() => {\n          let mol = this.state.chemDoodleCanvas.getMolecule();\n          let formattedMol = window.ChemDoodle.writeMOL(mol);\n          this.setState({\n              molecule: formattedMol,\n            }, () => {clusterCADSeqSearch(this.state.molecule, \"\")}); // is it necessary to put molecule in state?\n          }}>TEST</button>\n        <p><small>\n          {\"Molecule sketcher is used courtesy of \"}\n          <a href=\"http://web.ChemDoodle.com\" rel=\"noopener noreferrer\" target=\"_blank\">ChemDoodle</a>\n          {\" under version 3 of the GNU GPL license.\"}\n        </small></p>\n      </div>\n    )\n  }\n}\n\nexport default ChemDoodleWrapper;"]},"metadata":{},"sourceType":"module"}