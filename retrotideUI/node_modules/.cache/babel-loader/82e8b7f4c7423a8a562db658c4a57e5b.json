{"ast":null,"code":"import _classCallCheck from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{clusterCADSeqSearch}from'../redux/middleware/api';var canvasDimensions={HEIGHT:500,WIDTH:800};var ChemDoodleWrapper=/*#__PURE__*/function(_React$Component){_inherits(ChemDoodleWrapper,_React$Component);var _super=_createSuper(ChemDoodleWrapper);function ChemDoodleWrapper(props){var _this;_classCallCheck(this,ChemDoodleWrapper);_this=_super.call(this,props);_this.state={errorMessage:\"\",chemDoodleCanvas:{},// JS object corresponding to sketcher\nmolecule:\"\"};return _this;}_createClass(ChemDoodleWrapper,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var newCanvas=new window.ChemDoodle.SketcherCanvas('chemDoodleCanvas',canvasDimensions.WIDTH,canvasDimensions.HEIGHT,{useServices:false,oneMolecule:true});// we need to use a callback to get the result of setState as it's asynchronous\nthis.setState({chemDoodleCanvas:newCanvas},function(){console.log(_this2.state.chemDoodleCanvas);});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{id:\"chemDoodleWrapper\"},/*#__PURE__*/React.createElement(\"canvas\",{id:\"chemDoodleCanvas\",width:canvasDimensions.WIDTH+\"px\",height:canvasDimensions.HEIGHT+\"px\",style:{border:'1px solid black'}},\"This is a message that shows if the browser doesn't support HTML5 canvas, which all modern browsers should support now.\"),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){var mol=_this3.state.chemDoodleCanvas.getMolecule();var formattedMol=window.ChemDoodle.writeMOL(mol);_this3.setState({molecule:formattedMol},function(){clusterCADSeqSearch(_this3.state.molecule,\"\");});// is it necessary to put molecule in state?\n}},\"TEST\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Molecule sketcher is used courtesy of \",/*#__PURE__*/React.createElement(\"a\",{href:\"http://web.ChemDoodle.com\",rel:\"noopener noreferrer\",target:\"_blank\"},\"ChemDoodle\"),\" under version 3 of the GNU GPL license.\")));}}]);return ChemDoodleWrapper;}(React.Component);export default ChemDoodleWrapper;","map":{"version":3,"sources":["/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/src/components/ChemDoodleWrapper.js"],"names":["React","clusterCADSeqSearch","canvasDimensions","HEIGHT","WIDTH","ChemDoodleWrapper","props","state","errorMessage","chemDoodleCanvas","molecule","newCanvas","window","ChemDoodle","SketcherCanvas","useServices","oneMolecule","setState","console","log","border","mol","getMolecule","formattedMol","writeMOL","Component"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,mBAAR,KAAkC,yBAAlC,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,MAAM,CAAE,GADe,CAEvBC,KAAK,CAAE,GAFgB,CAAzB,C,GAKMC,CAAAA,iB,kIAEJ,2BAAYC,KAAZ,CAAmB,mDACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,YAAY,CAAE,EADH,CAEXC,gBAAgB,CAAE,EAFP,CAEW;AACtBC,QAAQ,CAAE,EAHC,CAAb,CAFiB,aAOlB,C,+DAED,4BAAoB,iBAClB,GAAIC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,MAAM,CAACC,UAAP,CAAkBC,cAAtB,CACd,kBADc,CAEdZ,gBAAgB,CAACE,KAFH,CAGdF,gBAAgB,CAACC,MAHH,CAId,CACEY,WAAW,CAAC,KADd,CAEEC,WAAW,CAAC,IAFd,CAJc,CAAhB,CASA;AACA,KAAKC,QAAL,CAAc,CAACR,gBAAgB,CAAEE,SAAnB,CAAd,CAA6C,UAAM,CAACO,OAAO,CAACC,GAAR,CAAY,MAAI,CAACZ,KAAL,CAAWE,gBAAvB,EAAyC,CAA7F,EACD,C,sBAED,iBAAS,iBACP,mBACE,2BAAK,EAAE,CAAC,mBAAR,eACE,8BAAQ,EAAE,CAAC,kBAAX,CAA8B,KAAK,CAAEP,gBAAgB,CAACE,KAAjB,CAAyB,IAA9D,CAAoE,MAAM,CAAEF,gBAAgB,CAACC,MAAjB,CAA0B,IAAtG,CAA4G,KAAK,CAAE,CAAEiB,MAAM,CAAE,iBAAV,CAAnH,4HADF,cAIE,8BAAQ,OAAO,CAAE,kBAAM,CACrB,GAAIC,CAAAA,GAAG,CAAG,MAAI,CAACd,KAAL,CAAWE,gBAAX,CAA4Ba,WAA5B,EAAV,CACA,GAAIC,CAAAA,YAAY,CAAGX,MAAM,CAACC,UAAP,CAAkBW,QAAlB,CAA2BH,GAA3B,CAAnB,CACA,MAAI,CAACJ,QAAL,CAAc,CACVP,QAAQ,CAAEa,YADA,CAAd,CAEK,UAAM,CAACtB,mBAAmB,CAAC,MAAI,CAACM,KAAL,CAAWG,QAAZ,CAAsB,EAAtB,CAAnB,CAA6C,CAFzD,EAE4D;AAC3D,CANH,SAJF,cAWE,0CAAG,iCACA,wCADA,cAED,yBAAG,IAAI,CAAC,2BAAR,CAAoC,GAAG,CAAC,qBAAxC,CAA8D,MAAM,CAAC,QAArE,eAFC,CAGA,0CAHA,CAAH,CAXF,CADF,CAmBD,C,+BA7C6BV,KAAK,CAACyB,S,EAgDtC,cAAepB,CAAAA,iBAAf","sourcesContent":["import React from 'react';\nimport {clusterCADSeqSearch} from '../redux/middleware/api';\n\nconst canvasDimensions = {\n  HEIGHT: 500,\n  WIDTH: 800,\n}\n\nclass ChemDoodleWrapper extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      chemDoodleCanvas: {}, // JS object corresponding to sketcher\n      molecule: \"\",\n    }\n  }\n\n  componentDidMount() {\n    let newCanvas = new window.ChemDoodle.SketcherCanvas(\n      'chemDoodleCanvas',\n      canvasDimensions.WIDTH,\n      canvasDimensions.HEIGHT,\n      {\n        useServices:false,\n        oneMolecule:true\n      }\n    );\n    // we need to use a callback to get the result of setState as it's asynchronous\n    this.setState({chemDoodleCanvas: newCanvas}, () => {console.log(this.state.chemDoodleCanvas)});\n  }\n\n  render() {\n    return ( \n      <div id=\"chemDoodleWrapper\">\n        <canvas id=\"chemDoodleCanvas\" width={canvasDimensions.WIDTH + \"px\"} height={canvasDimensions.HEIGHT + \"px\"} style={{ border: '1px solid black' }}>\n          This is a message that shows if the browser doesn't support HTML5 canvas, which all modern browsers should support now.\n        </canvas>\n        <button onClick={() => {\n          let mol = this.state.chemDoodleCanvas.getMolecule();\n          let formattedMol = window.ChemDoodle.writeMOL(mol);\n          this.setState({\n              molecule: formattedMol,\n            }, () => {clusterCADSeqSearch(this.state.molecule, \"\")}); // is it necessary to put molecule in state?\n          }}>TEST</button>\n        <p><small>\n          {\"Molecule sketcher is used courtesy of \"}\n          <a href=\"http://web.ChemDoodle.com\" rel=\"noopener noreferrer\" target=\"_blank\">ChemDoodle</a>\n          {\" under version 3 of the GNU GPL license.\"}\n        </small></p>\n      </div>\n    )\n  }\n}\n\nexport default ChemDoodleWrapper;"]},"metadata":{},"sourceType":"module"}