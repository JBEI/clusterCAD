{"ast":null,"code":"import _classCallCheck from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{updateMolecule as _updateMolecule}from'../redux/actions/actions';import Button from'./Button';import ChemDoodleWrapper from'./ChemDoodleWrapper';// This tab contains the canvas for drawing a target molecule and submitting it to backend\n// It does not store the molecule information locally but makes a async call to create a\n// job in the store and await results\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateMolecule:function updateMolecule(molecule){return dispatch(_updateMolecule(molecule));},dispatch:dispatch};};var MoleculeDiagram=/*#__PURE__*/function(_React$Component){_inherits(MoleculeDiagram,_React$Component);var _super=_createSuper(MoleculeDiagram);function MoleculeDiagram(){_classCallCheck(this,MoleculeDiagram);return _super.apply(this,arguments);}_createClass(MoleculeDiagram,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"MoleculeDiagram form\"},/*#__PURE__*/React.createElement(ChemDoodleWrapper,null),/*#__PURE__*/React.createElement(\"p\",null,\"Use the ChemDoodle canvas provided to draw the diagram of your target molecule\"),/*#__PURE__*/React.createElement(Button,{className:\"submitMolecule\",disabled:false,onClick:this.props.updateMolecule},\"Test\"));}}]);return MoleculeDiagram;}(React.Component);export default connect(null,mapDispatchToProps)(MoleculeDiagram);","map":{"version":3,"sources":["/Users/sarahlafrance/LBNL/clusterCAD/retrotideUI/src/components/MoleculeDiagram.js"],"names":["React","connect","updateMolecule","Button","ChemDoodleWrapper","mapDispatchToProps","dispatch","molecule","MoleculeDiagram","props","Component"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,cAAc,GAAdA,CAAAA,eAAT,KAA+B,0BAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA;AACA;AACA;AAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,CAAI,CACrC,MAAO,CACLJ,cAAc,CAAE,wBAAAK,QAAQ,QAAID,CAAAA,QAAQ,CAACJ,eAAc,CAACK,QAAD,CAAf,CAAZ,EADnB,CAELD,QAAQ,CAARA,QAFK,CAAP,CAID,CALD,C,GAOME,CAAAA,e,sRAEJ,iBAAS,CACP,mBACE,2BAAK,SAAS,CAAC,sBAAf,eACE,oBAAC,iBAAD,MADF,cAEE,8GAFF,cAIE,oBAAC,MAAD,EAAQ,SAAS,CAAC,gBAAlB,CAAmC,QAAQ,CAAE,KAA7C,CAAoD,OAAO,CAAE,KAAKC,KAAL,CAAWP,cAAxE,SAJF,CADF,CAQD,C,6BAX2BF,KAAK,CAACU,S,EAepC,cAAeT,CAAAA,OAAO,CAAC,IAAD,CAAOI,kBAAP,CAAP,CAAkCG,eAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateMolecule } from '../redux/actions/actions';\nimport Button from './Button';\nimport ChemDoodleWrapper from './ChemDoodleWrapper';\n\n// This tab contains the canvas for drawing a target molecule and submitting it to backend\n// It does not store the molecule information locally but makes a async call to create a\n// job in the store and await results\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateMolecule: molecule => dispatch(updateMolecule(molecule)),\n    dispatch,\n  }\n};\n\nclass MoleculeDiagram extends React.Component {\n\n  render() {\n    return (\n      <div className='MoleculeDiagram form'>\n        <ChemDoodleWrapper />\n        <p>Use the ChemDoodle canvas provided to draw the diagram of your target molecule</p>\n        {/*<Button className='submitMolecule' disabled={false} onClick={send_test} >Submit</Button>*/}\n        <Button className='submitMolecule' disabled={false} onClick={this.props.updateMolecule} >Test</Button>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(MoleculeDiagram);"]},"metadata":{},"sourceType":"module"}